[project]
name = "md_dead_link_check"
description = "This is a lightweight and fast tool to help you keep your Markdown files free of broken links."
readme = "README.md"
version = "1.2.0"
license = {text = "MIT"}
requires-python = ">=3.9"
dependencies = [
  "tomli>=2.2.0; python_version < '3.11'",
  "GitPython>=3.1.0,<3.2.0",
  "aiohttp>=3.10.11,<3.12.0"
]
keywords = [
  "markdown",
  "link checker",
  "dead link",
  "dead link checker",
  "broken link",
  "broken link checker",
  "link health",
  "documentation maintenance",
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[project.urls]
Repository = "https://github.com/AlexanderDokuchaev/md-dead-link-check"
Issues = "https://github.com/AlexanderDokuchaev/md-dead-link-check/issues"

[project.optional-dependencies]
dev = [
  "pytest==8.3.5",
  "pre-commit==4.2.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
only-include = ["md_dead_link_check"]

[tool.hatch.build.targets.wheel]
packages = ["md_dead_link_check"]

[project.scripts]
md-dead-link-check = 'md_dead_link_check.__main__:main'

[tool.ruff]
line-length = 120

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint]
select = [
    "EM",  # flake8-errmsg
    "F", # pyflakes rules
    "I",  # isort
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "UP", # pyupgrade
]
extend-select = [
    "SIM", # https://pypi.org/project/flake8-simplify
]
ignore = [
    "UP007", # non-pep604-annotation-union
    "UP045", # non-pep604-annotation-optional
]

[tool.ruff.lint.per-file-ignores]
"tests/**.py" = ["INP"]

[tool.mypy]
follow_imports = "silent"
strict = true
explicit_package_bases = true
ignore_missing_imports = true

[tool.md_dead_link_check]
exclude_files = [
  "tests/test_md_files/fail.md"
]
